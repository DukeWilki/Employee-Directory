{"version":3,"sources":["containers/EmployeeListHero/EmployeeListHero.js","containers/EmployeeListSearch/EmployeeListSearch.js","components/TableHeading/TableHeading.js","components/TableData/TableData.js","containers/EmployeeListTable/EmployeeListTable.js","utils/API.js","App.js","reportWebVitals.js","index.js"],"names":["EmployeeListHero","className","EmployeeListSearch","props","value","search","onChange","handleInputChange","name","list","type","placeholder","id","TableHeading","scope","onClick","sortByFirstName","TableData","parseDate","birthdate","date","Date","getDate","getMonth","getFullYear","results","map","result","alt","src","picture","medium","first","last","email","phone","dob","login","uuid","EmployeeListTable","axios","get","App","useState","employees","setEmployees","filteredEmployees","setFilteredEmployees","useEffect","API","then","res","data","inputState","e","nameSeacrh","target","filter","employee","toLowerCase","includes","nameSort","sortedEmployees","sort","employeeOne","employeeTwo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb2e395c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n\r\nfunction EmployeeListHero() {\r\n  // Render hero section\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"jumbotron jumbotron-fluid\">\r\n        <div className=\"container\">\r\n          <h1 className=\"display-4\">Employee Directory</h1>\r\n          <p className=\"lead\">\r\n            Search employees by first name, or click \"name\" to sort\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeListHero;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./style.css\";\r\n\r\n\r\nfunction EmployeeListSearch(props) {\r\n  // Render input feild\r\n  return (\r\n    <form className=\"search\">\r\n      <div className=\"form-group\">\r\n        <input\r\n          value={props.search}\r\n          onChange={props.handleInputChange}\r\n          name=\"term\"\r\n          list=\"term\"\r\n          type=\"text\"\r\n          className=\"form-control searchbar\"\r\n          placeholder=\"Search name here\"\r\n          id=\"term\"\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default EmployeeListSearch;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction TableHeading(props) {\r\n// Render table heading\r\n  return (\r\n    <thead className=\"thead-dark\">\r\n          <tr >\r\n            <th scope=\"col\" className=\"datafeild\">Photo</th>\r\n            <th scope=\"col\" className=\"datafeild\" id=\"name\" onClick={() => props.sortByFirstName('name')}>Name<span className=\"pointer\"></span></th>\r\n            <th scope=\"col\" className=\"datafeild wide\">Email</th>\r\n            <th scope=\"col\" className=\"datafeild\">Phone </th>\r\n            <th scope=\"col\" className=\"datafeild\">Date of Birth</th>\r\n          </tr>     \r\n    </thead>\r\n  );\r\n}\r\nexport default TableHeading;\r\n\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n  \r\nfunction TableData(props) {\r\n  // Format date in DD/MM/YYYY format \r\n  function parseDate(birthdate) {\r\n    const date = new Date(birthdate);\r\n    return (\r\n      date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear()\r\n    );\r\n  }\r\n\r\n  // Populate/render data\r\n  return (\r\n    <tbody className=\"tbody-dark\">\r\n      {props.results.map((result) => (\r\n        <tr key={result.login.uuid} className=\"search-results \">\r\n          <td className=\"datafeild\">\r\n            <img alt=\"profile\" src={result.picture.medium} />\r\n          </td>\r\n          <td className=\"datafeild\" id=\"namedata\">\r\n            {result.name.first} {result.name.last}\r\n          </td>\r\n          <td className=\"datafeild wide\" id=\"emaildata\">\r\n            {result.email}\r\n          </td>\r\n          <td className=\"datafeild\">{result.phone}</td>\r\n          <td className=\"datafeild\">{parseDate(result.dob.date)}</td>\r\n       </tr>\r\n      ))}\r\n    </tbody>\r\n  );\r\n}\r\nexport default TableData;\r\n","import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\nimport TableHeading from \"../../components/TableHeading/TableHeading\";\r\nimport TableData from \"../../components/TableData/TableData\";\r\n\r\nfunction EmployeeListTable(props) {\r\n// Render table layout\r\n  return (\r\n    <table className=\"EmployeeListTable table\">\r\n      <TableHeading sortByFirstName={props.sortByFirstName} />\r\n      <TableData results={props.results} />\r\n    </table>\r\n  );\r\n}\r\nexport default EmployeeListTable;\r\n","import axios from \"axios\";\r\n\r\n// Export an object containing methods we'll use for accessing the Dog.Ceo API\r\n\r\nexport default {\r\n  getEmployee: function() {\r\n    return axios.get(\"https://randomuser.me/api/?results=50\");\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport EmployeeListHero from \"./containers/EmployeeListHero/EmployeeListHero\";\nimport EmployeeListSearch from \"./containers/EmployeeListSearch/EmployeeListSearch\";\nimport EmployeeListTable from \"./containers/EmployeeListTable/EmployeeListTable\";\nimport API from './utils/API';\n\nfunction App() {\n  const [employees, setEmployees] = useState([]);\n  const [filteredEmployees, setFilteredEmployees] = useState([]);\n\n// Get employees via API\n  const fetchEmployees = () => {\n    API.getEmployee().then((res) => {\n      setEmployees(res.data.results);\n      setFilteredEmployees(res.data.results);\n    });\n  }\n\n  useEffect(() => {\n    fetchEmployees()\n  }, []);\n\n  // Filter by name function\n  const filterByFirstName = (nameSeacrh) => {\n    return employees.filter((employee) => {\n      return employee.name.first.toLowerCase().includes(nameSeacrh.toLowerCase());\n    })\n  } \n\n  // Enable changes in the input field\n  const changeInput = (e) => {\n    setFilteredEmployees(filterByFirstName(e.target.value));   \n  };\n\n  // Sort by name function\n  const sortByFirstName = (nameSort) => {\n    const sortedEmployees =  [...filteredEmployees].sort((employeeOne, employeeTwo) => {\n        if (employeeOne.name.first < employeeTwo.name.first ) {\n          return -1;\n        }\n        if (employeeOne.name.first > employeeTwo.name.first) {\n          return 1;\n        }\n        // a must be equal to b\n        return 0;\n    });\n    setFilteredEmployees(sortedEmployees)\n  } \n\n  // Render page\n    return (\n      <div className=\"App\">\n        <EmployeeListHero />\n        <EmployeeListSearch inputState=\"\" handleInputChange={changeInput} /> \n        <EmployeeListTable results={filteredEmployees} sortByFirstName={sortByFirstName} />\n      </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}